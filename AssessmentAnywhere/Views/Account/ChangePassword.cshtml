@model AssessmentAnywhere.Models.Account.ChangePasswordModel

@{
    ViewBag.Title = "Change Password";
}


<div class="row-fluid">
    <div class="span8 offset2">
        <h2>
            <i class="icon-lock"></i>
            Change Password
        </h2>
        <p>
            Use the form below to change your password. 
        </p>
        <div class="alert alert-success">
            Passwords are required to be a minimum of 6 characters in length.
        </div>

        @using (Html.BeginForm())
        {
            <div>
                <fieldset>
                    <legend>Account Information</legend>

                    @if (!ViewData.ModelState.IsValid)
                    {
                        <div class="alert alert-block">
                            <button type="button" class="close" data-dismiss="alert">&times;</button>
                            <p><b>Sign in was unsuccessful.</b> Please correct the errors and try again.</p>
                            <ul>
                                @foreach (var error in ViewData.ModelState.SelectMany(kv => kv.Value.Errors))
                                {
                                    <li>
                                        @error.ErrorMessage
                                    </li>
                                }
                            </ul>
                        </div>
                    }

                    <div class="control-group">
                        @Html.LabelFor(m => m.OldPassword, new { @class = "control-label" })
                        <div class="controls">
                            @Html.PasswordFor(m => m.OldPassword)
                            <div class="help-inline">
                                @Html.ValidationMessageFor(m => m.OldPassword)
                            </div>
                        </div>
                    </div>

                    <div class="control-group">
                        @Html.LabelFor(m => m.NewPassword, new { @class = "control-label" })
                        <div class="controls">
                            @Html.PasswordFor(m => m.NewPassword)
                            <div class="help-inline">
                                @Html.ValidationMessageFor(m => m.NewPassword)
                            </div>
                        </div>
                    </div>

                    <div class="control-group">
                        @Html.LabelFor(m => m.ConfirmPassword, new { @class = "control-label" })
                        <div class="controls">
                            @Html.PasswordFor(m => m.ConfirmPassword)
                            <div class="help-inline">
                                @Html.ValidationMessageFor(m => m.ConfirmPassword)
                            </div>
                        </div>
                    </div>

                    <div class="control-group">
                        <div class="controls">
                            <div class="row-fluid">
                                <div class="pull-left">
                                    <button type="submit" class="btn btn-success btn-large">
                                        <i class="icon-ok"></i>
                                        Change Password
                                    </button>
                                </div>
                                <div class="pull-left offset1">
                                    <button type="reset" class="btn btn-warning">
                                        <i class="icon-undo"></i>
                                        Reset
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </fieldset>
            </div>
        }
    </div>
</div>

@section Scripts
{
    <script src="@Url.Content("~/js/jquery.validate.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/js/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
}
