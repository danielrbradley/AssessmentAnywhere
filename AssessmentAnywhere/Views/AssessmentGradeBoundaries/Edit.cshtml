@model AssessmentAnywhere.Models.AssessmentGradeBoundaries.EditModel

@{
    ViewBag.Title = "Grade Boundaries for " + Model.AssessmentName;
    var minResultPlaceholder = Model.TotalMarks.HasValue ? string.Format("0-{0}", Model.TotalMarks) : "Min Result";
}

<div class="row-fluid">
    <div class="span8 offset2">
        <a href="@Url.Action("Edit", "Assessments", new { id = Model.AssessmentId })">
            <i class="icon-arrow-left"></i>
            return to assessment
        </a>
    </div>
</div>

<div class="row-fluid">
    <div class="span8 offset2 well">
        @using (Html.BeginForm("Update", "AssessmentGradeBoundaries", new { id = Model.AssessmentId } , FormMethod.Post, new { @class = "form-horizontal" }))
        {
            <fieldset>
                <legend>Edit Grade Boundaries for @Model.AssessmentName</legend>
                <div class="control-group">
                    @Html.LabelFor(m => m.TotalMarks, "Total Marks", new { @class = "control-label" })
                    <div class="controls">
                        @Html.TextBoxFor(m => m.TotalMarks, new { placeholder = "Total marks", @class = "input-small" })
                        <em>@Html.ValidationMessageFor(m => m.TotalMarks)</em>
                        <span class="help-inline">What's the total number of available marks in the assessment?</span>
                    </div>
                </div>
                <hr />
                <div class="control-group">
                    <div class="control-label" style="padding-top: 0;">
                        <b>Grade</b>
                    </div>
                    <div class="controls">
                        <b>Minimum Marks Required</b>
                    </div>
                </div>
                @for (int i = 0; i < Model.Boundaries.Count; i++)
                {
                    <div class="control-group">
                        <div class="control-label" style="padding-top: 0;">
                            @Html.TextBoxFor(m => m.Boundaries[i].Grade, new { placeholder = "Grade", @class = "input-small" })
                        </div>
                        <div class="controls">
                            @Html.TextBoxFor(m => m.Boundaries[i].MinResult, new { placeholder = minResultPlaceholder, @class = "input-medium" })
                            <em>@Html.ValidationMessageFor(m => m.Boundaries[i].Grade)</em>
                            <em>@Html.ValidationMessageFor(m => m.Boundaries[i].MinResult)</em>
                        </div>
                    </div>
                }
                <div class="control-group">
                    <div class="control-label" style="padding-top: 0;">
                        @Html.TextBoxFor(m => m.NewBoundary.Grade, new { placeholder = "Grade", @class = "input-small" })
                    </div>
                    <div class="controls">
                        @Html.TextBoxFor(m => m.NewBoundary.MinResult, new { placeholder = minResultPlaceholder, @class = "input-medium" })
                        <em>@Html.ValidationMessageFor(m => m.NewBoundary.Grade)</em>
                        <em>@Html.ValidationMessageFor(m => m.NewBoundary.MinResult)</em>
                    </div>
                </div>
                <div class="control-group">
                    <div class="controls">
                        <div class="row-fluid">
                            <div class="span6">
                                <button type="submit" class="btn btn-success">
                                    <i class="icon-ok icon-white"></i>
                                    Save changes
                                </button>
                            </div>
                            <div class="span6">
                                <button type="reset" class="btn btn-warning">
                                    <i class="icon-remove icon-white"></i>
                                    Reset
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </fieldset>
        }
    </div>
</div>
